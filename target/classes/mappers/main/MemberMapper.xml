<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.care.project.main.mapper.MemberMapper">
	<resultMap type="com.care.project.main.dto.MemberDTO" id="member">
        <id property="userId" column="user_id"/>
        <result property="userName" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="addr" column="addr"/>
        <result property="postNum" column="postnum"/>
        <result property="userBirthday" column="user_birthday"/>
        <result property="userGrade" column="user_grade"/>
    </resultMap>

    <!-- 회원가입 -->
    <insert id="register" parameterType="com.care.project.main.dto.MemberDTO">
        insert into users(user_id, username, password, email, phone_number, addr, postnum, user_birthday, user_grade)
        values(#{userId}, #{userName}, #{password}, #{email}, #{phoneNumber}, #{addr}, #{postNum}, #{userBirthday}, #{userGrade})
    </insert>

    <!-- 로그인 -->
    <select id="login" resultMap="member" parameterType="com.care.project.main.dto.MemberDTO">
        select * from users where user_id = #{userId} and password = #{password}
    </select>

    <!-- 회원 정보 수정 -->
    <update id="updateMember" parameterType="com.care.project.main.dto.MemberDTO">
        update users
        set username = #{userName}, 
            password = #{password}, 
            email = #{email}, 
            phone_number = #{phoneNumber}, 
            addr = #{addr}, 
            postnum = #{postNum}, 
            user_birthday = #{userBirthday}, 
            user_grade = #{userGrade}
        where user_id = #{userId}
    </update>

    <!-- 회원 탈퇴 -->
    <delete id="deleteMember" parameterType="String">
        delete from users where user_id = #{userId}
    </delete>

    <!-- 특정 사용자 정보 조회 -->
    <select id="getMember" resultMap="member" parameterType="String">
        select * from users where user_id = #{userId}
    </select>
    
    <!-- 아이디 중복 확인 -->
    <select id="getMemberById" resultMap="member" parameterType="String">
        select * from users where user_id = #{userId}
    </select>

    <!-- 이메일 중복 확인 -->
    <select id="getMemberByEmail" resultMap="member" parameterType="String">
        select * from users where email = #{email}
    </select>

</mapper>