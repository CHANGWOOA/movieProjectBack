<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.care.project.main.mapper.MemberMapper">
	<resultMap type="com.care.project.main.dto.MemberDTO"
		id="member">
		<id property="userId" column="user_id" />
		<result property="userName" column="username" />
		<result property="password" column="password" />
		<result property="email" column="email" />
		<result property="phoneNumber" column="phone_number" />
		<result property="postNum" column="postnum" />
		<result property="addr" column="addr" />
		<result property="detailAddr" column="detail_addr" /> <!-- 추가 -->
		<result property="userBirthday" column="user_birthday" />
		<result property="userGrade" column="user_grade" />
	</resultMap>

	<!-- 회원가입 -->
	<insert id="register"
		parameterType="com.care.project.main.dto.MemberDTO">
		INSERT INTO users (user_id, username, password, email, phone_number, postnum,
		addr, detail_addr,  user_birthday)
		VALUES (#{userId}, #{userName}, #{password}, #{email}, #{phoneNumber},
		#{postNum}, #{addr}, #{detailAddr}, #{userBirthday})
	</insert>

	<!-- 회원 정보 수정 -->
	<update id="updateMember"
		parameterType="com.care.project.main.dto.MemberDTO">
		UPDATE users
		SET username = #{userName}, password = #{password}, email = #{email},
		phone_number = #{phoneNumber}, postnum = #{postNum},
		addr = #{addr}, detail_addr = #{detailAddr}, user_birthday = #{userBirthday},
		user_grade = #{userGrade}
		WHERE user_id = #{userId}
	</update>

	<!-- 회원 탈퇴 -->
	<delete id="deleteMember" parameterType="String">
		DELETE FROM users WHERE user_id = #{userId}
	</delete>

	<!-- 특정 사용자 정보 조회(아이디 중복 체크) -->
	<select id="getMember" resultMap="member" parameterType="String">
		SELECT * FROM users WHERE user_id = #{userId}
	</select>
	
	<!-- 이메일 중복 체크 -->
 	<select id="getMemberByEmail" resultMap="member"
 		parameterType="String">
 		SELECT * FROM users WHERE email = #{email}
 	</select>

	<!-- 아이디 찾기 -->
    <select id="findUserId" resultType="string">
        SELECT user_id FROM users WHERE email = #{email}
    </select>

	<!-- 비밀번호 찾기 (사용자 확인) -->
    <select id="findPasswordCheck" resultType="int">
        SELECT COUNT(*) FROM users WHERE user_id = #{userId} AND email = #{email}
    </select>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword">
        UPDATE users SET password = #{newPassword} WHERE user_id = #{userId}
    </update>

	<select id="userData" resultMap="member">
		select * from users
	</select>
</mapper>