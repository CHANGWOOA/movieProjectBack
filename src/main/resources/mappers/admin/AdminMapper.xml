<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.care.project.admin.AdminMapper">
    <resultMap type="com.care.project.main.dto.MovieDTO" id="movie">
        <id property="movieId" column="movie_id" />
        <result property="title" column="title" />
        <result property="entitle" column="entitle" />
        <result property="posterUrl" column="poster_url" />
        <result property="stillUrl" column="still_url" />
        <result property="movieSynopsis" column="synopsis" />
        <result property="directorName" column="director" />
        <result property="actors" column="actors" />
        <result property="movieRank" column="movie_rank" />
        <result property="openDt" column="open_dt" />
    </resultMap>


<resultMap type="java.util.HashMap" id="paymentList">
		<id property="paymentId" column="payment_id" />
		<result property="amount" column="amount"/>
		<result property="paymentStatus" column="payment_status"/>
		<result property="createdAt" column="created_at"/>
		<result property="userId" column="user_id" />
	</resultMap>

    <insert id="insertMovie">
        insert into movie (movie_id, title, entitle, poster_url, still_url, synopsis, director, actors, movie_rank, open_dt) 
        values (#{movie.movieId}, #{movie.title}, #{movie.entitle, jdbcType=VARCHAR}, #{movie.posterUrl}, #{movie.stillUrl},
                #{movie.movieSynopsis}, #{movie.directorName, jdbcType=VARCHAR}, 
                #{movie.actors, jdbcType=VARCHAR}, #{movie.movieRank}, 
                #{movie.openDt, jdbcType=VARCHAR})
    </insert>

   <!-- 기존 영화 찾기 SQL 추가 -->
    <select id="findByMovieId" resultMap="movie">
        SELECT * FROM movie WHERE movie_id = #{movieId}
    </select>

    <update id="updateMovie">
        UPDATE movie
        SET title = #{movie.title},
        	entitle = #{movie.entitle, jdbcType=VARCHAR}, 
            poster_url = #{movie.posterUrl},
            still_url = #{movie.stillUrl},
            synopsis = #{movie.movieSynopsis}, 
            director = #{movie.directorName, jdbcType=VARCHAR}, 
            actors = #{movie.actors, jdbcType=VARCHAR},
            movie_rank = #{movie.movieRank},
            open_dt = #{movie.openDt, jdbcType=VARCHAR}
        WHERE movie_id = #{movie.movieId}
    </update>
    
    <!-- 영화 정보 수정 -->
    <update id="editMovie">
        UPDATE movie
        SET title = #{movie.title},
        	entitle = #{movie.entitle, jdbcType=VARCHAR}, 
            poster_url = #{movie.posterUrl},
            still_url = #{movie.stillUrl},
            synopsis = #{movie.movieSynopsis}, 
            director = #{movie.directorName, jdbcType=VARCHAR}, 
            actors = #{movie.actors, jdbcType=VARCHAR},
            movie_rank = #{movie.movieRank},
            open_dt = #{movie.openDt, jdbcType=VARCHAR}
        WHERE movie_id = #{movie.movieId}
    </update>
    
    <select id="getscheduleId">
    	SELECT MAX(schedule_id) FROM Schedule
    </select>
    
    <!-- 좌석 상태 삽입 -->
    <insert id="insertSeat">
    	insert into seat_status (seat_status_id, seat_id, schedule_id) values(seat_status_sequence.nextval, #{seatId} ,#{scheduleId})
    </insert>
    
    <delete id="deleteMovie">
    	delete from movie where movie_id=#{movieId}
    </delete>
    
    <select id="getPayment" resultMap="paymentList">
        select * from payment inner join reservation using (reservation_id)
    </select>
</mapper>